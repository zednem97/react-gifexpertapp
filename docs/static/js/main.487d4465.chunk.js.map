{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBkB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCLnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYbM,GAZa,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECFf,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDd0BK,CAAc1B,GAAlCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAGrB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAEHA,GADEA,EAAIC,aEhBrBgB,EAAe,WAAM,IAAD,EAGOzC,mBAAS,CAAC,cAHjB,mBAGtB0C,EAHsB,KAGV3C,EAHU,KAU7B,OACA,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEHA,SAAWA,GADLA,YClB1B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.487d4465.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = ( e ) =>{\n        setInputValue( e.target.value )\n    }\n\n    const handleSubmit = ( e ) =>{\n        e.preventDefault();\n        if( inputValue.trim().length >= 1 ){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n          <input\n            type=\"text\"\n            value={ inputValue }\n            onChange={ handleInputChange }\n          ></input> \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n","\n\nexport const getGifs = async ( category ) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=q62dwSU4eGwiFJP544y5HUCv08dBrVrX`\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map(  img => { \n        return{ \n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n   return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n    \n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ( { category } ) => {\n    \n    const { data:images, loading } = useFetchGifs( category );\n   \n    \n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n        { loading && <p className=\"animate__animated animate__flash\" >Loading</p> }\n\n        <div className=\"card-grid\">    \n                {\n                    images.map( img => {\n                        return <GifGridItem \n                        key= {img.id}\n                        {...img}/>\n                    } )\n                }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n               \n            })\n    }, [category])\n\n  \n    return state;\n}\n\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () =>{\n\n\n    const [categories, setCategories] = useState(['One Punch'])\n    \n    // const handleAdd = () =>{\n    //     //setCategories ( [...categories, 'HunterXHunter']);\n    //     setCategories( cats => [...cats, 'HunterXHunter']);\n    // }\n\n    return ( \n    <>\n    <h2>GifExpertApp</h2>\n    <AddCategory setCategories={ setCategories }/>\n    <hr />\n   \n    <ol>\n        {\n            categories.map( category =>{\n                return <GifGrid \n                    key={ category }\n                    category={ category } />\n            } )\n        }\n    </ol>\n    </>\n    )\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp'\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}